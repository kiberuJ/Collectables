{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/marketplace/AddListing.js","components/marketplace/Coin.js","components/utils/Loader.js","utils/marketplace.js","assets/1.jpg","components/marketplace/Coins.js","assets/2.jpg","assets/3.jpg","assets/4.jpg","assets/5.jpg","assets/6.jpg","assets/7.jpg","assets/8.jpg","assets/9.jpg","assets/10.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","contractId","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","AddProduct","save","useState","name","setName","image","setImage","description","setDescription","setLocation","price","setPrice","quantity","setQuantity","show","setShow","handleClose","Button","style","width","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","height","Footer","disabled","Coin","coin","buy","expunge","altImage","sold","owner","formattedPrice","utils","format","setAmount","realImage","url","img","Image","src","Promise","resolve","onload","onerror","isImgUrl","Col","Card","Badge","bg","alt","objectFit","Text","Row","class","for","xs","Array","keys","map","i","toast","Loader","role","GAS","buyCoin","totalPrice","toString","coinId","orderedCoins","parseInt","parseNearAmount","deleteCoin","clearListing","images","Coins","coins","setCoins","loading","setLoading","getCoins","useCallback","console","log","error","addCoin","data","uuid4","setCoin","then","resp","deleteEntry","deleteLedger","useEffect","AddListing","sm","lg","_coin","index","App","balance","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","container","document","getElementById","createRoot","render","StrictMode","catch"],"mappings":"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","file":"static/js/main.0651f3ff.chunk.js","sourcesContent":["const CONTRACT_NAME =\n  process.env.CONTRACT_NAME || \"collectables.kiberu.testnet\"; // line 1\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\": // line 5\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\": // line 14\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;\n","import environment from \"./config\";\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst nearEnv = environment(\"testnet\");\n\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { keyStore: new keyStores.BrowserLocalStorageKeyStore() },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: [\"getCoin\", \"getCoins\", \"entriesLength\"],\n      changeMethods: [\"buyCoin\", \"setCoin\", \"deleteCoin\", \"clearListing\"],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  return window.walletConnection.requestSignIn({\n    contractId: nearEnv.contractName,\n  });\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border py-1\"\n          >\n            {amount ? (\n              <>\n                {amount} <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{address}</span>\n              </Stack>\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\n\nconst AddProduct = ({ save }) => {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  const isFormFilled = () =>\n    name && image && description && location && price && quantity;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button\n        onClick={handleShow}\n        variant=\"dark\"\n        className=\"rounded-pill px-0\"\n        style={{ width: \"38px\" }}\n      >\n        <i className=\"bi bi-plus\"></i>\n      </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Add new coin listing</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <FloatingLabel\n              controlId=\"inputName\"\n              label=\"Listing name\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Enter name of product\"\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputUrl\"\n              label=\"Image URL\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Image URL\"\n                onChange={(e) => {\n                  setImage(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputDescription\"\n              label=\"Description\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"description\"\n                style={{ height: \"80px\" }}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputLocation\"\n              label=\"Location\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Location\"\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputPrice\"\n              label=\"Price\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Price\"\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputQuantity\"\n              label=\"Quantity\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"No of coins\"\n                onChange={(e) => {\n                  setQuantity(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n          </Modal.Body>\n        </Form>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                name,\n                image,\n                description,\n                location,\n                price,\n                quantity,\n              });\n              handleClose();\n            }}\n          >\n            Save listing\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nAddProduct.propTypes = {\n  save: PropTypes.func.isRequired,\n};\n\nexport default AddProduct;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { utils } from \"near-api-js\";\nimport { Card, Button, Col, Badge, Stack, Row } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { NotificationError } from \"../utils/Notifications\";\n\nconst Coin = ({ coin, buy, expunge, altImage }) => {\n  const {\n    id,\n    price,\n    name,\n    description,\n    sold,\n    location,\n    image,\n    owner,\n    quantity,\n  } = coin;\n  const formattedPrice = utils.format.formatNearAmount(price);\n\n  const [amount, setAmount] = useState(1);\n\n  const triggerBuy = () => {\n    if (quantity <= 0) {\n      toast(<NotificationError text=\"Out of stock!!!. Check later :).\" />);\n    } else {\n      buy(id, amount, price);\n    }\n  };\n\n  const removeEntry = () => {\n    expunge(id);\n  };\n\n  const updateQuantity = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const isImgUrl = (url) => {\n    const img = new Image();\n    img.src = url;\n    return new Promise((resolve) => {\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n    });\n  };\n\n  const realImage = isImgUrl(image) ? altImage : image;\n\n  return (\n    <Col key={id}>\n      <Card className=\" h-100\">\n        <Card.Header>\n          <Stack direction=\"horizontal\" gap={2}>\n            <span className=\"font-monospace text-secondary\">{owner}</span>\n            {quantity <= 0 ? (\n              <Badge bg=\"secondary\" className=\"ms-auto\">\n                Out of Stock\n              </Badge>\n            ) : (\n              <Badge bg=\"secondary\" className=\"ms-auto\">\n                {quantity} Remaining Coins\n              </Badge>\n            )}\n          </Stack>\n        </Card.Header>\n        <div className=\" ratio ratio-4x3\">\n          <img src={realImage} alt={name} style={{ objectFit: \"cover\" }} />\n        </div>\n        <Card.Body className=\"d-flex  flex-column text-center\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Text className=\"flex-grow-1 \">{description}</Card.Text>\n          <Card.Text className=\"text-secondary\">\n            <span>{location}</span>\n          </Card.Text>\n          <Row class=\"qnty\">\n            <Col>\n              <label for=\"buy\" id=\"lsel\">\n                Quantity:\n              </label>\n            </Col>\n            <Col xs={8}>\n              <select onChange={updateQuantity} value={amount} id=\"buy\">\n                {[...Array(quantity).keys()].map((i) => (\n                  <option>{i + 1}</option>\n                ))}\n              </select>\n            </Col>\n          </Row>\n          <Button\n            variant=\"outline-dark\"\n            onClick={triggerBuy}\n            className=\"w-100 py-3\"\n          >\n            Buy for {formattedPrice * amount} NEAR\n          </Button>\n          <Button\n            variant=\"outline-blue\"\n            onClick={removeEntry}\n            className=\"w-100 py-3 btn-danger\"\n          >\n            delete\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nCoin.propTypes = {\n  coin: PropTypes.instanceOf(Object).isRequired,\n  buy: PropTypes.func.isRequired,\n};\n\nexport default Coin;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\nexport default Loader;\n","import { v4 as uuid4 } from \"uuid\";\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\nimport { utils } from \"near-api-js\";\n\nconst GAS = 100000000000000;\n\nexport function createListing(coin) {\n  console.log(\"Invoked!!!\", coin);\n  coin.id = uuid4();\n  coin.price = parseNearAmount(coin.price + \"\");\n  coin.quantity = parseInt(coin.quantity);\n  return window.contract.setCoin({ coin });\n}\n\nexport function getCoins() {\n  return window.contract.getCoins();\n}\n\nexport async function buyCoin({ id, amount, price }) {\n  const totalPrice = (utils.format.formatNearAmount(price) * amount).toString();\n  await window.contract.buyCoin(\n    { coinId: id, orderedCoins: parseInt(amount) },\n    GAS,\n    parseNearAmount(totalPrice)\n  );\n}\n\nexport async function deleteCoin(id) {\n  await window.contract.deleteCoin({ coinId: id.id }, GAS);\n}\n\nexport async function clearListing() {\n  await window.contract.clearListing();\n}\n\nexport async function entriesLength() {\n  await window.contract.entriesLength();\n}\n","export default __webpack_public_path__ + \"static/media/1.6ed194a4.jpg\";","import React, { useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddListing from \"./AddListing\";\nimport Coin from \"./Coin\";\nimport Loader from \"../utils/Loader\";\nimport { Row, Button } from \"react-bootstrap\";\nimport { NotificationSuccess, NotificationError } from \"../utils/Notifications\";\nimport {\n  getCoins as getCoinList,\n  buyCoin,\n  createListing,\n  deleteCoin,\n  clearListing,\n} from \"../../utils/marketplace\";\n\n// images imports\nimport Image1 from \"../../assets/1.jpg\";\nimport Image2 from \"../../assets/2.jpg\";\nimport Image3 from \"../../assets/3.jpg\";\nimport Image4 from \"../../assets/4.jpg\";\nimport Image5 from \"../../assets/5.jpg\";\nimport Image6 from \"../../assets/6.jpg\";\nimport Image7 from \"../../assets/7.jpg\";\nimport Image8 from \"../../assets/8.jpg\";\nimport Image9 from \"../../assets/9.jpg\";\nimport Image10 from \"../../assets/10.jpg\";\n\nconst images = [\n  Image1,\n  Image2,\n  Image3,\n  Image4,\n  Image5,\n  Image6,\n  Image7,\n  Image8,\n  Image9,\n  Image10,\n];\n\nconst Coins = () => {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getCoins = useCallback(async () => {\n    try {\n      setLoading(true);\n      setCoins(await getCoinList());\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  const addCoin = async (data) => {\n    try {\n      setLoading(true);\n      createListing(data).then((resp) => {\n        getCoins();\n      });\n      toast(<NotificationSuccess text=\"Coin added successfully.\" />);\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to create a coin.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const buy = async (id, amount, price) => {\n    try {\n      await buyCoin({\n        id,\n        amount,\n        price,\n      }).then((resp) => getCoins());\n      toast(<NotificationSuccess text=\"coin bought successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to purchase coin.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteEntry = async (id) => {\n    try {\n      await deleteCoin({\n        id,\n      }).then((resp) => getCoins());\n      toast(<NotificationSuccess text=\"entry deleted successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to delete the coin!!!\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteLedger = async (id) => {\n    try {\n      await clearListing().then((resp) => getCoins());\n      toast(<NotificationSuccess text=\"Ledger cleared successfully\" />);\n    } catch (error) {\n      toast(<NotificationError text=\"Failed to delete the database!!!\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getCoins();\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\n            <h1 className=\"fs-4 fw-bold mb-0\">COLLECTABLES LISTING</h1>\n            <Button\n              variant=\"outline-blue\"\n              onClick={deleteLedger}\n              className=\"w-100 py-3 btn-danger\"\n            >\n              delete all entries\n            </Button>\n            <AddListing save={addCoin} />\n          </div>\n          <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\n            {coins.map((_coin, index) => (\n              <Coin\n                coin={{\n                  ..._coin,\n                }}\n                buy={buy}\n                expunge={deleteEntry}\n                altImage={images[index]}\n              />\n            ))}\n          </Row>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default Coins;\n","export default __webpack_public_path__ + \"static/media/2.e241ed6a.jpg\";","export default __webpack_public_path__ + \"static/media/3.1f077723.jpg\";","export default __webpack_public_path__ + \"static/media/4.13a2a923.jpg\";","export default __webpack_public_path__ + \"static/media/5.649e7cfb.jpg\";","export default __webpack_public_path__ + \"static/media/6.227fc229.jpg\";","export default __webpack_public_path__ + \"static/media/7.a9e67624.jpg\";","export default __webpack_public_path__ + \"static/media/8.d74629eb.jpg\";","export default __webpack_public_path__ + \"static/media/9.a07f2470.jpg\";","export default __webpack_public_path__ + \"static/media/10.a07f2470.jpg\";","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport { Notification } from \"./components/utils/Notifications\";\nimport Coins from \"./components/marketplace/Coins\";\nimport \"./App.css\";\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n  const [balance, setBalance] = useState(\"0\");\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  }, [account.accountId]);\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n  return (\n    <>\n      {<Notification />}\n      <Container fluid=\"md\">\n        <Nav className=\"justify-content-end pt-3 pb-5\">\n          {account.accountId ? (\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          ) : (\n            <Nav.Item>\n              <Button\n                onClick={login}\n                variant=\"outline-dark\"\n                className=\"rounded-pill px-3 mt-3\"\n              >\n                Connect Wallet\n              </Button>\n            </Nav.Item>\n          )}\n        </Nav>\n        <main>{<Coins />}</main>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { initializeContract } from \"./utils/near\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    const container = document.getElementById(\"root\");\n    const root = createRoot(container);\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  })\n  .catch(console.error);\nreportWebVitals();\n"],"sourceRoot":""}